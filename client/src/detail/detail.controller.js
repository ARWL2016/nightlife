/**
 * The detailCtrl controls the template which displays 
 * information about single search results.
 * This page is linked to dynamically from the search 
 * results and makes an API call  to getDetails on initialization.
 * 
 * @prop vm.date - the date string selected (from next 7 days) in the add to diary widget
 * @prop vm.dates - an array of dates generated by the datetimeSvc to populate the select element
 * @prop vm.hour - the hour string selected by the user in the diary widget 
 * @prop vm.hours - an array of hours, e.g. ['1.00', '2.00' ...]
 * @prop placeid - unique googleapi id associated with a location 
 * @prop 
 * 
 * @function getDetails - runs automatically when template is linked to from search results; this makes two 
 * calls to the googleAPI: see server/api/get-details and server/api/getphoto
 * @function addToDiary - allows the user to save an 'event' - a location with a time and date 
 */

(function(){
'use strict';

  angular.module('app').controller('DetailController', [
    '$routeParams', 
    'datetimeHelperService',
    'diaryService',
    'googleApiService', 
    'helperService',
    'localStorageService',
    DetailController]);

  function DetailController ($routeParams, datetimeSvc, diarySvc, googleApiSvc, helperSvc, localStorageSvc ) {
    var vm = this;

    // diary widget props
    vm.added = false;
    vm.hour = '1.00';
    vm.hours = datetimeSvc.getHours;
    vm.amPm = 'PM';
    vm.date = 'today';
    vm.dates = datetimeSvc.getNextWeek;

    // UI
    vm.diaryBtnLabel = 'ADD TO DIARY';
    vm.diarySpinner = false;

    // data
    vm.placeid = $routeParams.placeid || null;
    vm.photoref = $routeParams.photoref || null;
    vm.result;
    vm.starRating = {int: [], dec: []};
    vm.user = localStorageSvc.getUser();

    function initialize() {
      console.log(vm.placeid, vm.photoref);
      console.log(vm.user);

      // vm.user = localStorageSvc.getUser();
      if (vm.placeid && vm.photoref) {
        getDetails(vm.placeid, vm.photoref);
      }
    }

    function getDetails(placeid, photoref) {
      googleApiSvc
        .getDetails(placeid, photoref)
        .then(result => {
          vm.result = helperSvc.formatHours(helperSvc.formatTags(result)[0]);
          vm.starRating = helperSvc.createStarRating(vm.result.rating);
        })
        .catch(err => console.log({ err }));  
    }

    vm.addToDiary = () => {
      const datetime = datetimeSvc.getDatetime(vm.date, vm.hour, vm.amPm);
      const location = helperSvc.editResult(vm.result);

      if (!vm.added && vm.user.displayName && location && datetime) {
        vm.diarySpinner = true;
        diarySvc.addToDiary(vm.user, location, datetime)
          .then(res => {
            vm.diarySpinner = false; 
            vm.diaryBtnLabel = 'ADDED';
            vm.added = true;
          })
          .catch(e => {
            vm.diarySpinner = false; 
            console.log(e);
          })
      }
    }

    initialize();
  }

}());